SQL (cont.)
Bases de datos I

Universidad Nacional de General Sarmiento

* db1-ungs.github.io/clases/com-2/sql-2.html

.image img/db1-ungs.github.io-clases-com-2-sql-2.html.png 500 _

* Ordenamiento

* order by

	select *
	from   empleade
	order  by salario;
 
	select *
	from   empleade
	order  by salario desc;
 
	select *
	from   empleade
	order  by apellido, nombre;

* Subqueries

* subquery

	select nombre, salario
	from   empleade
	where  salario >= (select salario
	                   from   empleade
	                   where  legajo = 1234);
* exists

	select e1.nombre, e1.apellido
	from   empleade e1
	where  exists (select * 
	               from   empleade e2 
	               where  departamento = 'finanzas' and e2.salario >= e1.salario);
 
	select e1.nombre, e1.apellido
	from   empleade e1
	where  not exists (select * 
	                   from   empleade e2 
	                   where  departamento = 'finanzas' and e2.salario >= e1.salario);

* all
	select nombre, apellido
	from   empleade
	where  salario > all (select salario 
	                      from   empleade 
	                      where  departamento = 'sistemas');

* in
	select nombre, apellido, departamento
	from   empleade
	where  departamento in (select departamento 
	                        from   proyecto 
	                        where  fecha_inicio >= '2019-01-01');

* Funciones de agregación

* count

	select count(*) 
	from   empleade;
 
	select count(nombre) 
	from   empleade;
 
	select count(distinct nombre) 
	from   empleade;
 


* sum

	select sum(salario) 
	from   empleade;
 
* max

	select max(salario) 
	from   empleade;
 
* min

	select min(salario) 
	from   empleade;

* avg

	select avg(salario) 
	from   empleade;
 
* max + min + avg

	select max(salario), min(salario), avg(salario) 
	from   empleade;
 
* Agrupamiento

* group by

	select   departamento, count(*), avg(salario)
	from     empleade
	group by departamento;
 
	select   departamento, count(*), salario
	from     empleade
	group by departamento, salario;
 
	select   departamento, count(*), avg(salario)
	from     empleade
	where    departamento = 'sistemas' or departamento = 'finanzas'
	group by departamento;


* having

	select   departamento, avg(salario) 
	from     empleade 
	group by departamento 
	having   count(*) > 2;



La cláusula *having* solo puede hacer referencia a funciones de agregación o a campos que estén en el *group*by*.

* having != where

	select   departamento, count(*) 
	from     empleade 
	where    salario >= 400000
	group by departamento 
	having   count(*) > 2;
 
	select   departamento, count(*) 
	from     empleade 
	where    salario >= 400000 and departamento in (select   departamento
	                                                from     empleade
	                                                group by departamento
	                                                having   count(*) > 2)
	group by departamento;  

* Operaciones de conjuntos

* union

	(select nombre from empleade where departamento = 'sistemas')
	union
	(select nombre from empleade where departamento = 'administracion');
 
	(select nombre from empleade where departamento = 'sistemas')
	union all
	(select nombre from empleade where departamento = 'administracion');

* intersect

	(select apellido from empleade where salario >= 200000)
	intersect
	(select apellido from empleade where departamento = 'finanzas' or departamento = 'sistemas');
 
	(select apellido from empleade where salario >= 200000)
	intersect all
	(select apellido from empleade where departamento = 'finanzas' or departamento = 'sistemas');

* except

	(select nombre from empleade)
	except
	(select nombre from empleade where departamento = 'finanzas');
 
	(select nombre from empleade)
	except all
	(select nombre from empleade where departamento = 'finanzas');

* División

* División
__
En SQL no podemos resolver de manera directa la consulta:

- _empleades_que_ *trabajan*en*todos*los*proyectos*
__
__


Pero si aplicamos la equivalencia de cuantificadores:
.image tex/sql2-division-cuantificadores.png 30 _
__
__


Lo que podemos resolver es la consulta:

- _empleades_para_les_cuales_ *no*existe*un*proyecto* _en_el_que_ *no*trabajen*

* División
 
	-- empleades que trabajan en todos los proyectos

	select distinct legajo 
	from   empleade_proyecto ep1
	where  not exists 
	          (select 1 
	           from   proyecto p
	           where  not exists 
	                     (select 1
	                      from empleade_proyecto ep2
	                      where ep2.legajo = ep1.legajo and ep2.proyecto_id = p.proyecto_id));
__

*Template*para*la*división:*

	select distinct A from R R1 where not exists
		(select 1 from S where not exists
			(select 1 from R R2 where R2.A = R1.A and R2.B = S.B))
__

.image tex/ar-division.png 70 _


* Dudas, preguntas, consultas

__
__
__
__

.image img/pregunta.png 200 _


